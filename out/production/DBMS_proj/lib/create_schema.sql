DROP TABLE IF EXISTS pod_host;
DROP TABLE IF EXISTS podcast_sponsor;
DROP TABLE IF EXISTS podcast_genre;
DROP TABLE IF EXISTS episode_guest;
DROP TABLE IF EXISTS has;
DROP TABLE IF EXISTS song_play;
DROP TABLE IF EXISTS song_genre;
DROP TABLE IF EXISTS owns;
DROP TABLE IF EXISTS Album_song;
DROP TABLE IF EXISTS RL_Artist;
DROP TABLE IF EXISTS sungBy;
DROP TABLE IF EXISTS Artist_album;
DROP TABLE IF EXISTS Listen_count;
DROP TABLE IF EXISTS Pay_Ar;
DROP TABLE IF EXISTS Pay_RL;
DROP TABLE IF EXISTS Pay_PH;
DROP TABLE IF EXISTS Artist_sub;
DROP TABLE IF EXISTS Pod_sub;
DROP TABLE IF EXISTS Rates;
DROP TABLE IF EXISTS hears;
DROP TABLE IF EXISTS special_guest;
DROP TABLE IF EXISTS sponsors;
DROP TABLE IF EXISTS podcast_episode;
DROP TABLE IF EXISTS Pay_User;
DROP TABLE IF EXISTS Listens;
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS Wolfmedia;
DROP TABLE IF EXISTS record_label;
DROP TABLE IF EXISTS artists;
DROP TABLE IF EXISTS album;
DROP TABLE IF EXISTS genre;
DROP TABLE IF EXISTS podcast_host;
DROP TABLE IF EXISTS podcast;
DROP TABLE IF EXISTS song;


CREATE TABLE users (
u_id VARCHAR(50) PRIMARY KEY,
fname VARCHAR(50) NOT NULL,
lname VARCHAR(50) NOT NULL,
phone VARCHAR(20) NOT NULL UNIQUE,
email VARCHAR(100) NOT NULL,
reg_date DATE NOT NULL,
status VARCHAR(20) NOT NULL,
monthly_fee DECIMAL(10, 2)
);
CREATE TABLE Wolfmedia (
payment_id VARCHAR(50) PRIMARY KEY,
category VARCHAR(255) NOT NULL
);
CREATE TABLE record_label (
Rl_id VARCHAR(50) PRIMARY KEY,
name VARCHAR(255) NOT NULL
);
CREATE TABLE artists (
Ar_id VARCHAR(50) PRIMARY KEY,
name VARCHAR(255) NOT NULL,
primary_genre VARCHAR(255) NOT NULL,
status VARCHAR(255) NOT NULL,
country VARCHAR(255) NOT NULL,
monthly_listeners INT NOT NULL
);
CREATE TABLE album (
album_id VARCHAR(50) NOT NULL PRIMARY KEY,
release_year INT NOT NULL,
album_name VARCHAR(255) NOT NULL,
edition VARCHAR(255) NOT NULL
);
CREATE TABLE song (
S_id VARCHAR(50) NOT NULL PRIMARY KEY,
royalty_rate FLOAT NOT NULL,
release_country VARCHAR(255) NOT NULL,
release_date DATE NOT NULL,
title VARCHAR(255) NOT NULL,
duration FLOAT NOT NULL,
Royalty_paid VARCHAR(255) NOT NULL
);

CREATE TABLE song_play (
S_id VARCHAR(50) NOT NULL,
play_count INT NOT NULL,
month_year timestamp NOT NULL,
FOREIGN KEY (S_id) REFERENCES song(S_id)
);

CREATE TABLE genre (
genre_id VARCHAR(50) NOT NULL PRIMARY KEY,
genre VARCHAR(255) NOT NULL
);
CREATE TABLE podcast_host (
host_id VARCHAR(50) NOT NULL PRIMARY KEY,
email VARCHAR(255) NOT NULL,
f_name VARCHAR(255) NOT NULL,
l_name VARCHAR(255) NOT NULL,
phone VARCHAR(255) NOT NULL,
city VARCHAR(255) NOT NULL
);

CREATE TABLE podcast (
pod_id VARCHAR(50) NOT NULL PRIMARY KEY,
name VARCHAR(255) NOT NULL,
episode_count INT NOT NULL,
country VARCHAR(255) NOT NULL,
language VARCHAR(255) NOT NULL,
rating DECIMAL(10,2) NOT NULL,
total_subs INT NOT NULL,
flat_fee DECIMAL(10,2) NOT NULL
);

CREATE TABLE special_guest (
guest_id VARCHAR(50) NOT NULL PRIMARY KEY,
guest_name VARCHAR(255) NOT NULL
);
CREATE TABLE sponsors (
sponsor_id VARCHAR(50) NOT NULL PRIMARY KEY,
sponsor_name VARCHAR(255) NOT NULL
);

CREATE TABLE podcast_episode (
podEp_id VARCHAR(50) NOT NULL,
podEp_title VARCHAR(255) NOT NULL,
duration TIME NOT NULL,
ads_count INT NOT NULL,
listenCount INT NOT NULL,
Ad_rate INT NOT NULL,
release_date DATE NOT NULL,
PRIMARY KEY (podEp_id)
);

#
# CREATE TABLE Listen_count(
# podEp_id VARCHAR(50) NOT NULL,
# listenCount INT NOT NULL,
# month_year timestamp NOT NULL,
# FOREIGN KEY (podEp_id) REFERENCES podcast_episode(podEp_id)
# );

CREATE TABLE Pay_User (
u_id VARCHAR(50) NOT NULL,
payment_id VARCHAR(50) NOT NULL,
time_stamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
Amount DECIMAL(10,2) NOT NULL,
PRIMARY KEY (u_id, payment_id),
FOREIGN KEY (u_id) REFERENCES users(u_id)
ON DELETE CASCADE ON UPDATE CASCADE
# FOREIGN KEY (payment_id) REFERENCES Wolfmedia(payment_id)
# ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE Listens (
u_id VARCHAR(50) NOT NULL,
S_id VARCHAR(50) NOT NULL,
time_stamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
FOREIGN KEY (u_id) REFERENCES users(u_id)
ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (S_id) REFERENCES song(S_id)
ON DELETE CASCADE ON UPDATE CASCADE
);
# CREATE TABLE hears (
# u_id VARCHAR(50) NOT NULL,
# pod_id VARCHAR(50) NOT NULL,
# title VARCHAR(255) NOT NULL,
# time_stamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
# PRIMARY KEY (u_id, pod_id, title),
# FOREIGN KEY (u_id) REFERENCES users(u_id)
# ON DELETE CASCADE ON UPDATE CASCADE,
# FOREIGN KEY (pod_id,title) REFERENCES podcast_episode(pod_id,title)
# ON DELETE CASCADE ON UPDATE CASCADE
# );

CREATE TABLE Rates (
u_id VARCHAR(50) NOT NULL,
pod_id VARCHAR(50) NOT NULL,
rating INT NOT NULL,
PRIMARY KEY (u_id, pod_id),
FOREIGN KEY (u_id) REFERENCES users(u_id)
ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (pod_id) REFERENCES podcast(pod_id)
ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE Artist_sub (
u_id VARCHAR(50) NOT NULL,
Ar_id VARCHAR(50) NOT NULL,
time_stamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
PRIMARY KEY (u_id, Ar_id),
FOREIGN KEY (u_id) REFERENCES users (u_id)
ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (Ar_id) REFERENCES artists (Ar_id)
ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE Pod_sub (
u_id VARCHAR(50) NOT NULL,
pod_id VARCHAR(50) NOT NULL,
time_stamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
PRIMARY KEY (u_id, pod_id),
FOREIGN KEY (u_id) REFERENCES users (u_id)
ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (pod_id) REFERENCES podcast(pod_id)
ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE Pay_RL (
payment_id VARCHAR(50) NOT NULL,
Rl_id VARCHAR(50) NOT NULL,
time_stamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
Amount DECIMAL(10, 2) NOT NULL,
PRIMARY KEY (payment_id, Rl_id),
# FOREIGN KEY (payment_id) REFERENCES Wolfmedia(payment_id)
# ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (Rl_id) REFERENCES record_label(Rl_id)
ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE Pay_PH (
payment_id VARCHAR(50) NOT NULL,
host_id VARCHAR(50) NOT NULL,
time_stamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
Amount DECIMAL(10, 2) NOT NULL,
PRIMARY KEY (payment_id, host_id),
# FOREIGN KEY (payment_id) REFERENCES Wolfmedia(payment_id)
# ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (host_id) REFERENCES podcast_host(host_id)
ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE Pay_Ar (
Rl_id VARCHAR(50) NOT NULL,
Ar_id VARCHAR(50) NOT NULL,
Amount DECIMAL(10,2) NOT NULL,
Time_stamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
FOREIGN KEY (Ar_id) REFERENCES artists(Ar_id)
ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (Rl_id) REFERENCES record_label(Rl_id)
ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE Artist_album (
Ar_id VARCHAR(50) NOT NULL,
album_id VARCHAR(50) NOT NULL,
PRIMARY KEY (Ar_id, album_id),
FOREIGN KEY (Ar_id) REFERENCES artists (Ar_id)
ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (album_id) REFERENCES album (album_id)
ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE sungBy (
Ar_id VARCHAR(50) NOT NULL,
S_id VARCHAR(50) NOT NULL,
is_collaborator BOOLEAN NOT NULL,
PRIMARY KEY (Ar_id, S_id),
FOREIGN KEY (Ar_id) REFERENCES artists (Ar_id)
ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (S_id) REFERENCES song (S_id)
ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE RL_Artist (
Rl_id VARCHAR(50) NOT NULL,
Ar_id VARCHAR(50) NOT NULL,
FOREIGN KEY (Rl_id) REFERENCES record_label(Rl_id)
ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (Ar_id) REFERENCES artists(Ar_id)
ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE Album_song (
album_id VARCHAR(50) NOT NULL,
s_id VARCHAR(50) NOT NULL,
t_no INT NOT NULL,
PRIMARY KEY (album_id, s_id),
FOREIGN KEY (album_id) REFERENCES album(album_id)
ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (s_id) REFERENCES song(s_id)
ON DELETE CASCADE ON UPDATE CASCADE
);
-- create table for owns relationship
CREATE TABLE owns (
S_id VARCHAR(50) NOT NULL,
RL_id VARCHAR(50) NOT NULL,
PRIMARY KEY (S_id, RL_id),
FOREIGN KEY (S_id) REFERENCES song (S_id)
ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (RL_id) REFERENCES record_label (RL_id)
ON DELETE CASCADE ON UPDATE CASCADE
);
-- create table for song_genre relationship
CREATE TABLE song_genre (
S_id VARCHAR(50) NOT NULL,
genre_id VARCHAR(50) NOT NULL,
PRIMARY KEY (S_id, genre_id),
FOREIGN KEY (S_id) REFERENCES song (S_id)
ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (genre_id) REFERENCES genre (genre_id)
ON DELETE CASCADE ON UPDATE CASCADE
);
-- create table for episode_guest relationship
CREATE TABLE episode_guest (
podEd_id VARCHAR(50) NOT NULL,
guest_id VARCHAR(50) NOT NULL,
PRIMARY KEY (podEd_id, guest_id),
FOREIGN KEY (guest_id) REFERENCES special_guest (guest_id)
ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (podEd_id) REFERENCES podcast_episode(podEp_id)
ON DELETE CASCADE ON UPDATE CASCADE
);

-- create table for podcast_genre relationship
CREATE TABLE podcast_genre (
genre_id VARCHAR(50) NOT NULL,
pod_id VARCHAR(50) NOT NULL,
PRIMARY KEY (genre_id, pod_id),
FOREIGN KEY (genre_id) REFERENCES genre (genre_id)
ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (pod_id) REFERENCES podcast (pod_id)
ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE podcast_sponsor (
pod_id VARCHAR(50) NOT NULL,
sponsor_id VARCHAR(50) NOT NULL,
PRIMARY KEY (pod_id, sponsor_id),
FOREIGN KEY (pod_id) REFERENCES podcast(pod_id)
ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (sponsor_id) REFERENCES sponsors(sponsor_id)
ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE pod_host (
pod_id VARCHAR(50) NOT NULL,
host_id VARCHAR(50) NOT NULL,
PRIMARY KEY (pod_id, host_id),
FOREIGN KEY (pod_id) REFERENCES podcast(pod_id)
ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (host_id) REFERENCES podcast_host(host_id)
ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE has (
pod_id VARCHAR(50) NOT NULL,
podEp_id VARCHAR(50) NOT NULL,
FOREIGN KEY (pod_id) REFERENCES podcast(pod_id)
ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (podEp_id) REFERENCES podcast_episode(podEp_id)
ON DELETE CASCADE ON UPDATE CASCADE
);

